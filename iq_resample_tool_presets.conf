# -----------------------------------------------------------------------------
# Preset Configuration File for the I/Q Resampling Tool
# -----------------------------------------------------------------------------
#
# HOW TO USE THIS FILE:
#
# 1. This file allows you to define custom presets for common resampling tasks.
# 2. To define a new preset, create a new section like [preset:your-preset-name].
#    The 'your-preset-name' is what you will use with the --preset option.
# 3. Inside each section, add key = value pairs to define the preset's behavior.
# 4. Lines starting with '#' or ';' are comments and are ignored.
# 5. The program will look for this file in its current directory at startup.
#
# --- AVAILABLE KEYS ---
#
# description          = (Required) A short, one-line description of the preset.
#                        This text is shown when you run the program with --help.
#
# target_rate          = (Required) The final output sample rate in Hz.
#                        You can use scientific notation (e.g., 2.4e6 for 2.4 MHz).
#
# sample_format_name   = (Required) The output sample format.
#
#                        For 'raw' output, the following formats are supported:
#                          cu8      : Unsigned 8-bit complex I/Q
#                          cs8      : Signed 8-bit complex I/Q
#                          cs16     : Signed 16-bit complex I/Q
#                          cu16     : Unsigned 16-bit complex I/Q
#                          sc16q11  : 16-bit Signed Complex Q4.11 I/O
#                          cs32     : Signed 32-bit complex I/Q
#                          cu32     : Unsigned 32-bit complex I/Q
#                          cf32     : 32-bit float complex I/Q
#
#                        IMPORTANT: For 'wav' or 'wav-rf64' output, you MUST use
#                        either 'cs16' or 'cu8'. Other formats are not supported.
#
# output_type          = (Required) The output container format. Must be one of:
#                          raw      : Headerless I/Q data, for piping to other tools.
#                          wav      : Standard WAV file (max 4GB).
#                          wav-rf64 : RF64/BW64 WAV file for large recordings.
#
# gain                 = (Optional) A software gain multiplier applied after normalization.
#                        The default is 1.0. This is very useful for boosting the
#                        signal level to use the full dynamic range of low-bit-depth
#                        formats like 'cu8'. A value of 5.0 is a good starting point.
#
# dc_block             = (Optional) Enables a high-pass filter to remove any DC offset
#                        from the center of the spectrum. Use 'true' or 'false'.
#                        Defaults to false if omitted.
#
# iq_correction        = (Optional) Enables automatic I/Q imbalance correction. This can
#                        significantly improve signal quality by reducing the mirror image.
#                        Use 'true' or 'false'. Defaults to false if omitted.
#                        For best results, this requires 'dc_block = true'.
#
# -----------------------------------------------------------------------------

# --- Example Presets for NRSC5 Decoding ---

[preset:cu8-nrsc5]
description = Sets sample type to cu8, rate to 1488375.0 Hz for FM/AM NRSC5 decoding (produces headerless raw output).
target_rate = 1488375.0
sample_format_name = cu8
output_type = raw
dc_block = false
iq_correction = false

[preset:cs16-fm-nrsc5]
description = Sets sample type to cs16, rate to 744187.5 Hz for FM NRSC5 decoding (produces headerless raw output).
target_rate = 744187.5
sample_format_name = cs16
output_type = raw
dc_block = false
iq_correction = false

[preset:cs16-am-nrsc5]
description = Sets sample type to cs16, rate to 46511.71875 Hz for AM NRSC5 decoding (produces headerless raw output).
target_rate = 46511.71875
sample_format_name = cs16
output_type = raw
dc_block = false
iq_correction = false


# --- Example of a User-Defined Preset ---
#
# Let's say you frequently resample for a specific WFM broadcast receiver
# that requires 240k sps with 16-bit samples in a standard WAV file.
# You could add the following preset by uncommenting the lines below:

; [preset:wfm-240k]
; description = Standard 240 ksps I/Q for WFM broadcast analysis.
; target_rate = 240000
; sample_format_name = cs16
; output_type = wav
; dc_block = true
; iq_correction = true
